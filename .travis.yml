# We set the language to c because python isn't supported on the MacOS X and Windows nodes
# on Travis. However, the language ends up being irrelevant anyway.
language: c

compiler: gcc

# Cache can be cleared from the travis settings menu, see docs currently at
# https://docs.travis-ci.com/user/caching#Clearing-Caches
cache:
  - ccache
  - .hypothesis

notifications:
  slack:
    on_success: always
    on_failure: always
    secure: gLrQgrHNqHs0lOPsfvjlh0v8k56mJifPNpht0BX55YV0n1u5alKCrKOVcKTFNFY0gOldhwFNFq4oy3o5EaZkDx+CO71qiwwJr7ex7zT70EjHzWxEG8l2Bww9J3xVzhGgQw6tMq57HHiuOoJ07TJPvVxL+E/WZmkxRAdlzUhcab4=
    if: type = cron

os:
    - linux

# We need a full clone to make sure setuptools_scm works properly
git:
    depth: false


addons:
    apt:
        packages:
            # We include the german language pack because we use the
            # de_DE locale in some of the io.ascii tests.
            - language-pack-de
            # tzdata is included to ensure system leap seconds are up to date.
            - tzdata

env:
    global:

        # Set defaults to avoid repeating in most cases
        # By default, we run our jobs with tox.
        - SETUP_METHOD='tox'

        # The following three variables are for tox. TOXENV is a standard
        # variable that tox uses to determine the environment to run,
        # TOXARGS are arguments passed to tox, and TOXPOSARGS are arguments
        # that tox passes through to the {posargs} indicator in tox.ini.
        # The latter can be used for example to pass arguments to pytest.
        - TOXENV='test'
        - TOXARGS='-v'
        - TOXPOSARGS=''

        # For installing without tox, we can rely mostly on what Debian already
        # includes.  This is only used if SETUP_METHOD='apt'.
        # Note that this also means it can be used to test whether astropy can
        # properly use the system libraries, since the python3-astropy package
        # pulls those in (i.e., one can and should use ASTROPY_USE_SYSTEM_ALL=1).
        - APT_DEPENDENCIES="python3-pip python3-dev libpython3.8-dev python3.8-dev libexpat1-dev zlib1g-dev libc6-dev python3-venv python3-setuptools cython3 python3-astropy python3-numpy wcslib-dev libcfitsio-dev python3-pytest-astropy ipython3 python3-pytest-cov python3-pytest-xdist python3-objgraph python3-coverage python3-attr python3-colorama tzdata"

        # The following is needed to avoid issues if e.g. Matplotlib tries
        # to open a GUI window.
        - SETUP_XVFB=True

stages:
   - name: Cron tests

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # Try MacOS X.
        - os: osx
          osx_image: xcode12.2  # macOS 10.15.7
          name: Python 3.8 with all optional dependencies for OSX
          stage: Cron tests
          env: TOXENV="py38-test-alldeps"
               TOXPOSARGS="--remote-data=astropy"
               CCOMPILER=clang

before_install:

    - if [[ $TRAVIS_OS_NAME == windows ]]; then
        choco install --no-progress python --version 3.8;
        python -m pip install --upgrade pip;
      fi

    - if [[ $TRAVIS_OS_NAME == osx ]]; then
        export python=/usr/local/bin/python3;
        python --version;
        pip3 install -U pip;
      fi

    # We need to use CCOMPILER otherwise Travis overwrites CC if we define it
    # in env: above.
    - if [ ! -z $CCOMPILER ]; then
        export CC=$CCOMPILER;
      fi

     # Check CC variable
    - echo "CC="$CC

    - if [[ $TOXENV == *-cov ]]; then
        export TOXPOSARGS=$TOXPOSARGS" --cov-report=xml:"$TRAVIS_BUILD_DIR"/coverage.xml";
      fi

    - echo "TOXENV="$TOXENV
    - echo "TOXARGS="$TOXARGS
    - echo "TOXPOSARGS="$TOXPOSARGS

install:
    # For APT key updates, see https://ftp-master.debian.org/keys.html
    - if [ $SETUP_METHOD == 'apt' ]; then
        curl https://ftp-master.debian.org/keys/archive-key-10.asc | sudo apt-key add -;
        echo "deb http://ftp.us.debian.org/debian testing main" | sudo tee -a /etc/apt/sources.list;
        sudo apt-get -qq update;
        sudo apt-get install -t testing -y --no-install-recommends ${APT_DEPENDENCIES};
      fi

script:
    - if [ $SETUP_METHOD == 'tox' ]; then
        pip install tox;
        tox $TOXARGS -- $TOXPOSARGS;
      else
        python3 -m venv --system-site-packages tests;
        source tests/bin/activate;
        pip3 install -e .[test];
        python3 -m pytest;
      fi

after_success:
    - if [[ $TOXENV == *-cov ]]; then
        pip install codecov;
        codecov --gcov-glob "*cextern*";
      fi
