version: 2

jobs:
  egg-info-37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: python setup.py egg_info

  32bit:
    docker:
      - image: quay.io/pypa/manylinux1_i686
    steps:
      - checkout
      - run:
          name: Write configuration items to standard location to make sure they are ignored in parallel mode
          command: |
              mkdir -p $HOME/.astropy/config/
              printf "unicode_output = True\nmax_width = 500" > $HOME/.astropy/config/astropy.cfg
      - run:
          name: Install dependencies for Python 3.6
          command: /opt/python/cp36-cp36m/bin/pip install "numpy<1.17" scipy pytest pytest-astropy pytest-xdist Cython jinja2
      - run:
          name: Run tests for Python 3.6
          command: PYTHONHASHSEED=42 /opt/python/cp36-cp36m/bin/python setup.py test --parallel=4 -a "--durations=50"
      - run:
          name: Install dependencies for Python 3.7
          command: /opt/python/cp37-cp37m/bin/pip install "numpy<1.17" scipy pytest pytest-astropy pytest-xdist Cython jinja2 pandas
      - run:
          name: Run tests for Python 3.7
          command: PYTHONHASHSEED=42 /opt/python/cp37-cp37m/bin/python setup.py test --parallel=4 -a "--durations=50"
      - run:
          name: Install dependencies for Python 3.8
          command: /opt/python/cp38-cp38/bin/pip install numpy pytest pytest-astropy pytest-xdist Cython jinja2
      - run:
          name: Run tests for Python 3.8
          command: PYTHONHASHSEED=42 /opt/python/cp38-cp38/bin/python setup.py test --parallel=4 -a "--durations=50"

  image-tests-mpl212:
    docker:
      - image: astropy/image-tests-py36-mpl212:1.8
    steps:
      - checkout
      - run:
          name: Run tests
          command: python3 setup.py test -P visualization --remote-data=astropy --open-files -a "--mpl --mpl-results-path=$PWD/results"
      - store_artifacts:
          path: results

  image-tests-mpl222:
    docker:
      - image: astropy/image-tests-py36-mpl222:1.8
    steps:
      - checkout
      - run:
          name: Run tests
          command: python3 setup.py test -P visualization --remote-data=astropy --open-files -a "--mpl --mpl-results-path=$PWD/results"
      - store_artifacts:
          path: results

  image-tests-mpl302:
    docker:
      - image: astropy/image-tests-py37-mpl302:1.8
    steps:
      - checkout
      - run:
          name: Run tests
          command: python3 setup.py test -P visualization --remote-data=astropy --open-files -a "--mpl --mpl-results-path=$PWD/results"
      - store_artifacts:
          path: results

  image-tests-mpl310:
    docker:
      - image: astropy/image-tests-py37-mpl311:1.8
    steps:
      - checkout
      - run:
          name: Run tests
          command: python3 setup.py test -P visualization --remote-data=astropy --open-files -a "--mpl --mpl-results-path=$PWD/results"
      - store_artifacts:
          path: results

  image-tests-mpldev:
    docker:
      - image: astropy/image-tests-py37-base:1.2
    steps:
      - checkout
      - run:
          name: Install C++ compiler
          command: |
            apt update
            apt install -y g++
      - run:
          name: Install Python dependencies, including developer version of Matplotlib
          command: pip3 install pytest pytest-mpl pytest-astropy numpy scipy git+https://github.com/matplotlib/matplotlib.git
      - run:
          name: Run tests
          command: python3 setup.py test -P visualization --remote-data=astropy --open-files -a "--mpl --mpl-results-path=$PWD/results"
      - store_artifacts:
          path: results

  html-docs:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: Install apt packages
          command: |
            sudo apt update
            sudo apt install -y graphviz
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install numpydoc matplotlib sphinx
            pip install .[docs,all]
      - run:
          name: Make sure flake8 passes
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install flake8
            # select options should be the same as in the travis config
            flake8 astropy --count --select=E101,W191,W291,W292,W293,W391,E111,E112,E113,E30,E502,E722,E901,E902,E999,F822,F823
      - run:
          name: Build Docs
          command: venv/bin/python setup.py build_docs -w
          environment:
            LC_CTYPE: C
            LC_ALL: C
            LANG: C

      - run:
          name: Prepare for upload
          command: |
            # If it's not a PR, don't upload
            if [ -z "${CIRCLE_PULL_REQUEST}" ]; then
              rm -r docs/_build/html
            else
              # If it is a PR, delete sources and doctrees, because it's a lot
              # of files which we don't really need to upload
              rm -r docs/_build/html/_sources
              rm -r docs/_build/html/_modules
              rm -r docs/_build/html/.doctrees
            fi

      - store_artifacts:
          path: docs/_build/html

      - run:
          name: "Built documentation is available at:"
          command: DOCS_URL="${CIRCLE_BUILD_URL}/artifacts/${CIRCLE_NODE_INDEX}/${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/docs/_build/html/index.html"; echo $DOCS_URL

workflows:
  version: 2
  tests_and_docs:
    jobs:
      - egg-info-37
      - html-docs
      - 32bit
      - image-tests-mpl212
      - image-tests-mpl222
      - image-tests-mpl302
      - image-tests-mpl310
      - image-tests-mpldev

notify:
  webhooks:
    - url: https://giles.cadair.com/circleci
